0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/0.10.15/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish',
1 verbose cli   '.' ]
2 info using npm@1.3.5
3 info using node@v0.10.15
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/Nick/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz
12 verbose folder .
13 info prepublish skrap@0.1.0
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/Nick/.npm/1f1177db-tar.lock
16 silly lockFile fbbf666a-2144-0-21620579762384295-tmp-tgz tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz
17 verbose lock tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz /Users/Nick/.npm/fbbf666a-2144-0-21620579762384295-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile fbbf666a-2144-0-21620579762384295-tmp-tgz tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz
21 silly lockFile fbbf666a-2144-0-21620579762384295-tmp-tgz tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz
22 verbose tar unpack /var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz
23 silly lockFile 08d6a225-2144-0-21620579762384295-package tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package
24 verbose lock tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package /Users/Nick/.npm/08d6a225-2144-0-21620579762384295-package.lock
25 silly lockFile fbbf666a-2144-0-21620579762384295-tmp-tgz tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz
26 verbose lock tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz /Users/Nick/.npm/fbbf666a-2144-0-21620579762384295-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry .npmignore
30 silly gunzTarPerm extractEntry README.md
31 silly gunzTarPerm extractEntry LICENSE-MIT
32 silly gunzTarPerm extractEntry examples/imdb.js
33 silly gunzTarPerm extractEntry examples/imdb.json
34 silly gunzTarPerm extractEntry lib/cli.js
35 silly gunzTarPerm extractEntry lib/skrap.js
36 silly gunzTarPerm extractEntry src/cli.coffee
37 silly gunzTarPerm extractEntry src/skrap.coffee
38 silly lockFile 08d6a225-2144-0-21620579762384295-package tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package
39 silly lockFile 08d6a225-2144-0-21620579762384295-package tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package
40 silly lockFile fbbf666a-2144-0-21620579762384295-tmp-tgz tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz
41 silly lockFile fbbf666a-2144-0-21620579762384295-tmp-tgz tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/tmp.tgz
42 verbose tar pack [ '/Users/Nick/.npm/skrap/0.1.0/package.tgz',
42 verbose tar pack   '/var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package' ]
43 verbose tarball /Users/Nick/.npm/skrap/0.1.0/package.tgz
44 verbose folder /var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package
45 silly lockFile 08d6a225-2144-0-21620579762384295-package tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package
46 verbose lock tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package /Users/Nick/.npm/08d6a225-2144-0-21620579762384295-package.lock
47 silly lockFile 5764e2ec-Nick-npm-skrap-0-1-0-package-tgz tar:///Users/Nick/.npm/skrap/0.1.0/package.tgz
48 verbose lock tar:///Users/Nick/.npm/skrap/0.1.0/package.tgz /Users/Nick/.npm/5764e2ec-Nick-npm-skrap-0-1-0-package-tgz.lock
49 silly lockFile 08d6a225-2144-0-21620579762384295-package tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package
50 silly lockFile 08d6a225-2144-0-21620579762384295-package tar:///var/folders/1q/n32qc7kd5wvgl24r7mnmgt3c0000gp/T/npm-10293-1UqP6UTu/1391951382144-0.21620579762384295/package
51 silly lockFile 5764e2ec-Nick-npm-skrap-0-1-0-package-tgz tar:///Users/Nick/.npm/skrap/0.1.0/package.tgz
52 silly lockFile 5764e2ec-Nick-npm-skrap-0-1-0-package-tgz tar:///Users/Nick/.npm/skrap/0.1.0/package.tgz
53 silly lockFile 59b4cf4a-ers-Nick-npm-skrap-0-1-0-package /Users/Nick/.npm/skrap/0.1.0/package
54 verbose lock /Users/Nick/.npm/skrap/0.1.0/package /Users/Nick/.npm/59b4cf4a-ers-Nick-npm-skrap-0-1-0-package.lock
55 silly lockFile 59b4cf4a-ers-Nick-npm-skrap-0-1-0-package /Users/Nick/.npm/skrap/0.1.0/package
56 silly lockFile 59b4cf4a-ers-Nick-npm-skrap-0-1-0-package /Users/Nick/.npm/skrap/0.1.0/package
57 verbose tar unpack /Users/Nick/.npm/skrap/0.1.0/package.tgz
58 silly lockFile 24785c2e-ers-Nick-npm-skrap-0-1-0-package tar:///Users/Nick/.npm/skrap/0.1.0/package
59 verbose lock tar:///Users/Nick/.npm/skrap/0.1.0/package /Users/Nick/.npm/24785c2e-ers-Nick-npm-skrap-0-1-0-package.lock
60 silly lockFile 5764e2ec-Nick-npm-skrap-0-1-0-package-tgz tar:///Users/Nick/.npm/skrap/0.1.0/package.tgz
61 verbose lock tar:///Users/Nick/.npm/skrap/0.1.0/package.tgz /Users/Nick/.npm/5764e2ec-Nick-npm-skrap-0-1-0-package-tgz.lock
62 silly gunzTarPerm modes [ '755', '644' ]
63 silly gunzTarPerm extractEntry package.json
64 silly gunzTarPerm extractEntry .npmignore
65 silly gunzTarPerm extractEntry README.md
66 silly gunzTarPerm extractEntry LICENSE-MIT
67 silly gunzTarPerm extractEntry examples/imdb.js
68 silly gunzTarPerm extractEntry examples/imdb.json
69 silly gunzTarPerm extractEntry lib/cli.js
70 silly gunzTarPerm extractEntry lib/skrap.js
71 silly gunzTarPerm extractEntry src/cli.coffee
72 silly gunzTarPerm extractEntry src/skrap.coffee
73 silly lockFile 24785c2e-ers-Nick-npm-skrap-0-1-0-package tar:///Users/Nick/.npm/skrap/0.1.0/package
74 silly lockFile 24785c2e-ers-Nick-npm-skrap-0-1-0-package tar:///Users/Nick/.npm/skrap/0.1.0/package
75 silly lockFile 5764e2ec-Nick-npm-skrap-0-1-0-package-tgz tar:///Users/Nick/.npm/skrap/0.1.0/package.tgz
76 silly lockFile 5764e2ec-Nick-npm-skrap-0-1-0-package-tgz tar:///Users/Nick/.npm/skrap/0.1.0/package.tgz
77 verbose chmod /Users/Nick/.npm/skrap/0.1.0/package.tgz 644
78 verbose chown /Users/Nick/.npm/skrap/0.1.0/package.tgz [ 502, 20 ]
79 silly lockFile 3a52ce78- .
80 silly lockFile 3a52ce78- .
81 silly publish { name: 'skrap',
81 silly publish   description: 'Easily scrap web pages by providing json recipes',
81 silly publish   version: '0.1.0',
81 silly publish   homepage: 'https://github.com/nickdima/skrap',
81 silly publish   author: { name: 'Nick Dima', email: 'nick.dima@gmail.com' },
81 silly publish   repository: { type: 'git', url: 'git://github.com/nickdima/skrap.git' },
81 silly publish   bugs: { url: 'https://github.com/nickdima/skrap/issues' },
81 silly publish   licenses:
81 silly publish    [ { type: 'MIT',
81 silly publish        url: 'https://github.com/nickdima/skrap/blob/master/LICENSE-MIT' } ],
81 silly publish   main: 'lib/skrap',
81 silly publish   bin: { skrap: './lib/cli.js' },
81 silly publish   directories: { example: 'examples' },
81 silly publish   engines: { node: '>= 0.6.0' },
81 silly publish   dependencies: { cheerio: '~0.13.1', optimist: '~0.6.0', superagent: '~0.16.0' },
81 silly publish   keywords: [ 'scrap', 'scraping', 'crawl', 'crawling' ],
81 silly publish   readme: '# skrap\n\n**Skrap** is a command line utility and node.js module for easily scraping web pages by providing [json recipes](#create-a-recipe).\n\n## Getting Started\nInstall the module with: `npm install skrap`\n\n### Use it from the command line\n\n    skrap recipe.json param1=value param2=value ... [options]\n\n### Use it in node.js\n\n```javascript\nvar skrap = require(\'skrap\');\nvar recipePath = "./recipe.json";\n\nskrap(recipePath, {param: \'value\'}, function(data) {\n  \tconsole.log(data);\n})\n```\n\n## Documentation\n\n### Create a recipe\nA recipe is just a JSON file that contains rules for scraping a web page. Here\'s a simple example:\n\n```json\n{\n    "url" : "http://www.imdb.com/find?q=${movie}&s=tt&ttype=ft&ref_=fn_ft",\n    "collections" : [{\n        "name" : "movies",\n        "query": "$(\'table.findList tr\')",\n        "fields": {\n            "title" : "find(\'td.result_text a\').text()",\n            "year" : "find(\'td.result_text\').text().match(/\\\\((\\\\d{4})\\\\)/)[1]",\n            "poster" : "find(\'td.primary_photo img\').attr(\'src\')",\n        }\n    }]\n}\n```\n\nThe recipe makes use of CSS selectors for targeting the pieces of data that needs to be scraped. **Skrap** depends on the [`cheerio`](https://github.com/MatthewMueller/cheerio) node.js module for querying the DOM, which [selector\'s implementation](https://github.com/MatthewMueller/cheerio#selectors) is nearly identical to jQuery\'s, so the API is very similar.\n\n#### Brakedown of a simple recipe file\n\n* `url` - the url of the page that needs to pe scraped, can contain multiple placeholders in the form of `${param_name}` for paramters that can be passed from the command line or programtically in node.js\n* `collections` - an array of objects that describe one or more collections (lists of data) to be parsed from the page\n    - `name` - the collection\'s name for grouping the results in the output\n    - `query` - the selector function that should return an array of objects from which to build the collection\n    - `fields` - pairs of data field names and function calls to be applied on the queried objects for retriving the pieces of data needed\n\nRunning `skrap` with the above example and passing the parameter `movie=spider-man` will generate [this JSON file](https://gist.github.com/nickdima/8898038)\n\n#### Page crawling and advanced options\n\nHere\'s a more complex example:\n\n```json\n{\n    "url" : "http://www.imdb.com/find?q=${movie}&s=tt&ttype=ft&ref_=fn_ft",\n    "headers": {\n        "Accept-Language": "en-US,en;q=0.8,it;q=0.6,ro;q=0.4"\n    },\n    "collections" : [{\n        "name" : "movies",\n        "query": "$(\'table.findList tr\')",\n        "fields": {\n            "title" : "find(\'td.result_text a\').text()",\n            "year" : "find(\'td.result_text\').text().match(/\\\\((\\\\d{4})\\\\)/)[1]",\n            "poster" : "find(\'td.primary_photo img\').attr(\'src\')",\n            "details": {\n                "url" : "find(\'td.result_text a\').attr(\'href\').replace(\'/\',\'http://www.imdb.com/\')",\n                "group": false,\n                "fields": {\n                    "rating": "$(\'#overview-top .star-box-giga-star\').text().trim()",\n                    "duration": "$(\'#overview-top time\').text().trim()"             \n                }\n            }\n        }\n    }]\n}\n```\n\n**Optional fields:**\n\n* `headers` - key, value pairs of http headers to be passed when making the requests for the pages to be scraped\n\n**Page crawling**\n\n**Skrap** has basic support for one level deep page crawling. The way it works is by provinding an object with crawling instructions instead of just a selector for a field name.\n* `url` - the url of the page that needs to be crawled, a function call simmilar to the ones for retriving the pieces of data\n* `group` - a boolean value for specifing if the crawled data should be grouped under an object (using the parent field name) or attached to the main object. Defaults to `true`\n* `fields` - pairs of data field names and selector functions for retriving the pieces of data needed\n\nIn cases when you need to crawl a page for just a single piece of data, there\'s also a simplified syntax:\n\n```json\n"rating": {\n    "url" : "find(\'td.result_text a\').attr(\'href\').replace(\'/\',\'http://www.imdb.com/\')",\n    "query": "$(\'#overview-top .star-box-giga-star\').text().trim()"\n}\n```\n\n## Examples\nSee the [/examples](https://github.com/nickdima/skrap/tree/master/examples) folder\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\n\n## License\nCopyright (c) 2014 Nick Dima  \nLicensed under the MIT license.\n',
81 silly publish   readmeFilename: 'README.md',
81 silly publish   _id: 'skrap@0.1.0',
81 silly publish   dist: { shasum: '0137cf6a760e07c658e1ad96aac7b326c714d5c6' },
81 silly publish   _from: '.' }
82 verbose url raw skrap
83 verbose url resolving [ 'https://registry.npmjs.org/', './skrap' ]
84 verbose url resolved https://registry.npmjs.org/skrap
85 info trying registry request attempt 1 at 14:09:44
86 http PUT https://registry.npmjs.org/skrap
87 http 409 https://registry.npmjs.org/skrap
88 verbose url raw skrap
89 verbose url resolving [ 'https://registry.npmjs.org/', './skrap' ]
90 verbose url resolved https://registry.npmjs.org/skrap
91 info trying registry request attempt 1 at 14:09:44
92 http GET https://registry.npmjs.org/skrap
93 http 200 https://registry.npmjs.org/skrap
94 error publish fail Cannot publish over existing version.
94 error publish fail Update the 'version' field in package.json and try again.
94 error publish fail
94 error publish fail If the previous version was published in error, see:
94 error publish fail     npm help unpublish
94 error publish fail
94 error publish fail To automatically increment version numbers, see:
94 error publish fail     npm help version
95 error System Darwin 13.0.0
96 error command "/usr/local/Cellar/node/0.10.15/bin/node" "/usr/local/bin/npm" "publish" "."
97 error cwd /Users/Nick/Documents/Personal Projects/skrap
98 error node -v v0.10.15
99 error npm -v 1.3.5
100 error code EPUBLISHCONFLICT
101 verbose exit [ 1, true ]
